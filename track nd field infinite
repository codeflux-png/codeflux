--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v82=v2(v0(v30,16));if v19 then local v90=v5(v82,v19);v19=nil;return v90;else return v82;end end end);local function v20(v31,v32,v33) if v33 then local v83=(v31/((5 -3)^(v32-(2 -(1638 -(1523 + 114))))))%((3 -1)^(((v33-(2 -1)) -(v32-(620 -(555 + 64)))) + (932 -(857 + 74)))) ;return v83-(v83%(569 -(367 + 201))) ;else local v84=927 -(214 + 713) ;local v85;while true do if (v84==(0 + 0)) then v85=(1 + 0 + 1)^(v32-(878 -(282 + (847 -252)))) ;return (((v31%(v85 + v85))>=v85) and 1) or 0 ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=(237 + 828) -(68 + 997) ;local v36;local v37;while true do if (v35==(958 -(892 + 65))) then return (v37 * (1526 -(226 + 1044))) + v36 ;end if (v35==((0 -0) -0)) then v36,v37=v1(v16,v18,v18 + (119 -(32 + 85)) );v18=v18 + 2 + 0 ;v35=1;end end end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + 3 );v18=v18 + (6 -2) ;return (v41 * (30800116 -14022900)) + (v40 * 65536) + (v39 * (606 -(87 + 263))) + v38 ;end local function v24() local v42=180 -(67 + 113) ;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==3) then if (v47==((442 -(416 + 26)) + 0)) then if (v46==(0 -0)) then return v48 * (0 + 0) ;else v47=1;v45=0 -0 ;end elseif (v47==(2999 -((2560 -1758) + 150))) then return ((v46==0) and (v48 * ((2 -1)/(0 -0)))) or (v48 * NaN) ;end return v8(v48,v47-(745 + 278) ) * (v45 + (v46/(2^(23 + 29)))) ;end if (v42==(997 -(915 + 82))) then v43=v23();v44=v23();v42=1;end if (v42==(5 -3)) then v47=v20(v44,(22 -9) + (446 -(145 + 293)) ,40 -9 );v48=((v20(v44,(1649 -(44 + 386)) -(1069 + 118) )==1) and  -(2 -1)) or ((1487 -(998 + 488)) -0) ;v42=1 + 2 ;end if (v42==(1 -0)) then v45=1 + 0 + 0 ;v46=(v20(v44,792 -(368 + 423) ,62 -42 ) * ((20 -(10 + 8))^32)) + v43 ;v42=7 -5 ;end end end local function v25(v49) local v50;if  not v49 then local v86=0 + 0 ;while true do if (v86==0) then v49=v23();if (v49==(772 -(201 + 571))) then return "";end break;end end end v50=v3(v16,v18,(v18 + v49) -(1139 -(116 + 1022)) );v18=v18 + v49 ;local v51={};for v65=4 -(2 + 1) , #v50 do v51[v65]=v2(v1(v3(v50,v65,v65)));end return v6(v51);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=0;local v53;local v54;local v55;local v56;local v57;local v58;while true do local v67=0;while true do if (v67==1) then if ((0 -0)==v52) then v53={};v54={};v55={};v56={v53,v54,nil,v55};v52=1475 -(1329 + 145) ;end break;end if (v67==0) then if (v52~=(972 -(140 + 831))) then else v57=v23();v58={};for v96=1,v57 do local v97=1850 -(1409 + 441) ;local v98;local v99;local v100;while true do if (v97==(718 -(15 + 703))) then local v107=0 + 0 ;while true do if ((438 -(262 + 176))==v107) then v98=0;v99=nil;v107=1722 -(345 + 1376) ;end if (v107==(689 -(198 + 490))) then v97=1;break;end end end if (v97==1) then v100=nil;while true do if (v98==(4 -3)) then if (v99==1) then v100=v21()~=(0 -0) ;elseif (v99==2) then v100=v24();elseif (v99~=(1209 -(696 + 510))) then else v100=v25();end v58[v96]=v100;break;end if (v98~=(0 -0)) then else local v109=0;while true do if (v109==1) then v98=1;break;end if (0~=v109) then else v99=v21();v100=nil;v109=1;end end end end break;end end end v56[3]=v21();v52=2;end if ((1264 -(1091 + 171))==v52) then for v101=1 + 0 ,v23() do local v102=0 -0 ;local v103;local v104;while true do if (v102==(0 -0)) then v103=374 -(123 + 251) ;v104=nil;v102=4 -3 ;end if (v102==1) then while true do if (v103~=(698 -(208 + 490))) then else v104=v21();if (v20(v104,1 + 0 ,1)==0) then local v200=0;local v201;local v202;local v203;while true do if (v200~=2) then else if (v20(v202,1,1 + 0 )==1) then v203[2]=v58[v203[838 -(660 + 176) ]];end if (v20(v202,1 + 1 ,2)==(203 -(14 + 188))) then v203[678 -(534 + 141) ]=v58[v203[2 + 1 ]];end v200=3;end if ((0 + 0)==v200) then local v274=0 + 0 ;local v275;while true do if (v274==(0 -0)) then v275=0 -0 ;while true do if (v275==0) then v201=v20(v104,5 -3 ,3);v202=v20(v104,3 + 1 ,4 + 2 );v275=397 -(115 + 281) ;end if ((2 -1)~=v275) then else v200=1;break;end end break;end end end if (v200==3) then if (v20(v202,3,3)==(1 + 0)) then v203[4]=v58[v203[9 -5 ]];end v53[v101]=v203;break;end if (v200~=1) then else v203={v22(),v22(),nil,nil};if (v201==0) then local v319=0 -0 ;local v320;while true do if (v319~=0) then else v320=0 -0 ;while true do if (v320==0) then v203[8 -5 ]=v22();v203[289 -(134 + 151) ]=v22();break;end end break;end end elseif (v201==1) then v203[1668 -(970 + 695) ]=v23();elseif (v201==2) then v203[3]=v23() -((3 -1)^16) ;elseif (v201==3) then local v354=1990 -(582 + 1408) ;local v355;while true do if (v354==(0 -0)) then v355=0;while true do if (v355~=0) then else v203[3 -0 ]=v23() -((7 -5)^16) ;v203[4]=v22();break;end end break;end end end v200=1826 -(1195 + 629) ;end end end break;end end break;end end end for v105=1,v23() do v54[v105-1 ]=v28();end return v56;end v67=1;end end end end local function v29(v59,v60,v61) local v62=v59[1];local v63=v59[2];local v64=v59[3];return function(...) local v68=v62;local v69=v63;local v70=v64;local v71=v27;local v72=1;local v73= -1;local v74={};local v75={...};local v76=v12("#",...) -1 ;local v77={};local v78={};for v87=0,v76 do if (v87>=v70) then v74[v87-v70 ]=v75[v87 + 1 ];else v78[v87]=v75[v87 + 1 ];end end local v79=(v76-v70) + 1 ;local v80;local v81;while true do v80=v68[v72];v81=v80[1];if (v81<=36) then if (v81<=17) then if (v81<=8) then if (v81<=3) then if (v81<=1) then if (v81==0) then local v110=v80[2];v78[v110]=v78[v110](v78[v110 + 1 ]);elseif v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end elseif (v81>2) then v78[v80[2]]=v80[3]~=0 ;else v78[v80[2]]=v78[v80[3]] * v80[4] ;end elseif (v81<=5) then if (v81>4) then v78[v80[2]]=v80[3];else v78[v80[2]]= not v78[v80[3]];end elseif (v81<=6) then local v117=v80[2];local v118,v119=v71(v78[v117](v78[v117 + 1 ]));v73=(v119 + v117) -1 ;local v120=0;for v204=v117,v73 do v120=v120 + 1 ;v78[v204]=v118[v120];end elseif (v81==7) then if  not v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end else local v219=v80[2];v78[v219](v78[v219 + 1 ]);end elseif (v81<=12) then if (v81<=10) then if (v81>9) then v78[v80[2]]=v61[v80[3]];else v78[v80[2]]=v78[v80[3]][v80[4]];end elseif (v81>11) then for v207=v80[2],v80[3] do v78[v207]=nil;end else v78[v80[2]]=v80[3]~=0 ;end elseif (v81<=14) then if (v81>13) then if  not v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end else for v209=v80[2],v80[3] do v78[v209]=nil;end end elseif (v81<=15) then local v126=v80[2];local v127=v78[v80[3]];v78[v126 + 1 ]=v127;v78[v126]=v127[v80[4]];elseif (v81>16) then local v221=v80[2];local v222,v223=v71(v78[v221](v13(v78,v221 + 1 ,v73)));v73=(v223 + v221) -1 ;local v224=0;for v261=v221,v73 do local v262=0;while true do if (v262==0) then v224=v224 + 1 ;v78[v261]=v222[v224];break;end end end else local v225=v80[2];v78[v225](v13(v78,v225 + 1 ,v80[3]));end elseif (v81<=26) then if (v81<=21) then if (v81<=19) then if (v81==18) then local v131=v80[2];local v132=v78[v131];for v211=v131 + 1 ,v73 do v7(v132,v78[v211]);end else local v133=v80[2];v78[v133]=v78[v133](v13(v78,v133 + 1 ,v73));end elseif (v81>20) then v78[v80[2]]=v78[v80[3]];else v78[v80[2]]=v61[v80[3]];end elseif (v81<=23) then if (v81==22) then local v139=0;local v140;local v141;while true do if (v139==1) then for v278=1, #v77 do local v279=v77[v278];for v299=0, #v279 do local v300=0;local v301;local v302;local v303;while true do if (v300==0) then v301=v279[v299];v302=v301[1];v300=1;end if (1==v300) then v303=v301[2];if ((v302==v78) and (v303>=v140)) then local v350=0;while true do if (v350==0) then v141[v303]=v302[v303];v301[1]=v141;break;end end end break;end end end end break;end if (v139==0) then v140=v80[2];v141={};v139=1;end end else local v142=0;local v143;while true do if (v142==0) then v143=v80[2];v78[v143](v13(v78,v143 + 1 ,v80[3]));break;end end end elseif (v81<=24) then local v144=0;local v145;while true do if (v144==0) then v145=v80[2];v78[v145](v13(v78,v145 + 1 ,v73));break;end end elseif (v81==25) then local v226=v80[2];local v227=v78[v80[3]];v78[v226 + 1 ]=v227;v78[v226]=v227[v80[4]];else local v231=v80[2];local v232,v233=v71(v78[v231](v13(v78,v231 + 1 ,v80[3])));v73=(v233 + v231) -1 ;local v234=0;for v266=v231,v73 do local v267=0;while true do if (v267==0) then v234=v234 + 1 ;v78[v266]=v232[v234];break;end end end end elseif (v81<=31) then if (v81<=28) then if (v81==27) then local v146=v80[2];do return v13(v78,v146,v146 + v80[3] );end else v72=v80[3];end elseif (v81<=29) then local v148=v80[2];v78[v148]=v78[v148](v13(v78,v148 + 1 ,v80[3]));elseif (v81>30) then v78[v80[2]]=v80[3];else do return;end end elseif (v81<=33) then if (v81==32) then local v150=v80[2];v78[v150]=v78[v150](v13(v78,v150 + 1 ,v80[3]));else v78[v80[2]][v80[3]]=v80[4];end elseif (v81<=34) then v78[v80[2]]={};elseif (v81>35) then local v237=v78[v80[4]];if  not v237 then v72=v72 + 1 ;else v78[v80[2]]=v237;v72=v80[3];end elseif (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=55) then if (v81<=45) then if (v81<=40) then if (v81<=38) then if (v81>37) then local v155=0;local v156;while true do if (v155==0) then v156=v80[2];v78[v156](v78[v156 + 1 ]);break;end end else v78[v80[2]]=v78[v80[3]]/v80[4] ;end elseif (v81==39) then local v158=v80[2];v78[v158]=v78[v158]();else v78[v80[2]]=v60[v80[3]];end elseif (v81<=42) then if (v81==41) then v78[v80[2]]=v60[v80[3]];elseif (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=43) then local v164=0;local v165;local v166;local v167;local v168;while true do if (v164==2) then for v283=v165,v73 do v168=v168 + 1 ;v78[v283]=v166[v168];end break;end if (v164==0) then v165=v80[2];v166,v167=v71(v78[v165](v13(v78,v165 + 1 ,v73)));v164=1;end if (v164==1) then v73=(v167 + v165) -1 ;v168=0;v164=2;end end elseif (v81>44) then local v239=v80[2];v78[v239](v13(v78,v239 + 1 ,v73));else do return;end end elseif (v81<=50) then if (v81<=47) then if (v81==46) then do return v78[v80[2]];end else v78[v80[2]]=v78[v80[3]];end elseif (v81<=48) then v60[v80[3]]=v78[v80[2]];elseif (v81>49) then local v240=0;local v241;local v242;local v243;while true do if (v240==2) then for v325=1,v80[4] do v72=v72 + 1 ;local v326=v68[v72];if (v326[1]==47) then v243[v325-1 ]={v78,v326[3]};else v243[v325-1 ]={v60,v326[3]};end v77[ #v77 + 1 ]=v243;end v78[v80[2]]=v29(v241,v242,v61);break;end if (v240==0) then v241=v69[v80[3]];v242=nil;v240=1;end if (v240==1) then v243={};v242=v10({},{__index=function(v328,v329) local v330=0;local v331;while true do if (v330==0) then v331=v243[v329];return v331[1][v331[2]];end end end,__newindex=function(v332,v333,v334) local v335=v243[v333];v335[1][v335[2]]=v334;end});v240=2;end end else local v244=v80[2];local v245=v78[v244];for v270=v244 + 1 ,v73 do v7(v245,v78[v270]);end end elseif (v81<=52) then if (v81==51) then v78[v80[2]]={};else v78[v80[2]]=v78[v80[3]][v80[4]];end elseif (v81<=53) then local v176=0;local v177;local v178;while true do if (v176==0) then v177=v80[2];v178={};v176=1;end if (v176==1) then for v286=1, #v77 do local v287=v77[v286];for v306=0, #v287 do local v307=0;local v308;local v309;local v310;while true do if (v307==1) then v310=v308[2];if ((v309==v78) and (v310>=v177)) then local v351=0;while true do if (v351==0) then v178[v310]=v309[v310];v308[1]=v178;break;end end end break;end if (v307==0) then v308=v287[v306];v309=v308[1];v307=1;end end end end break;end end elseif (v81==54) then v72=v80[3];else v78[v80[2]]();end elseif (v81<=64) then if (v81<=59) then if (v81<=57) then if (v81>56) then v78[v80[2]][v80[3]]=v78[v80[4]];else v78[v80[2]]();end elseif (v81>58) then do return v78[v80[2]];end else v78[v80[2]][v80[3]]=v80[4];end elseif (v81<=61) then if (v81>60) then local v183=v80[2];local v184,v185=v71(v78[v183](v78[v183 + 1 ]));v73=(v185 + v183) -1 ;local v186=0;for v212=v183,v73 do v186=v186 + 1 ;v78[v212]=v184[v186];end else v60[v80[3]]=v78[v80[2]];end elseif (v81<=62) then if (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81>63) then local v248=0;local v249;while true do if (v248==0) then v249=v80[2];v78[v249]=v78[v249]();break;end end else v78[v80[2]]=v78[v80[3]] * v80[4] ;end elseif (v81<=69) then if (v81<=66) then if (v81>65) then if v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end else local v189=v78[v80[4]];if  not v189 then v72=v72 + 1 ;else v78[v80[2]]=v189;v72=v80[3];end end elseif (v81<=67) then local v190=0;local v191;local v192;local v193;while true do if (v190==2) then for v288=1,v80[4] do v72=v72 + 1 ;local v289=v68[v72];if (v289[1]==47) then v193[v288-1 ]={v78,v289[3]};else v193[v288-1 ]={v60,v289[3]};end v77[ #v77 + 1 ]=v193;end v78[v80[2]]=v29(v191,v192,v61);break;end if (0==v190) then v191=v69[v80[3]];v192=nil;v190=1;end if (v190==1) then v193={};v192=v10({},{__index=function(v291,v292) local v293=v193[v292];return v293[1][v293[2]];end,__newindex=function(v294,v295,v296) local v297=v193[v295];v297[1][v297[2]]=v296;end});v190=2;end end elseif (v81==68) then local v254=v80[2];v78[v254]=v78[v254](v13(v78,v254 + 1 ,v73));else v78[v80[2]]= not v78[v80[3]];end elseif (v81<=71) then if (v81>70) then if (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end else local v194=v80[2];v78[v194]=v78[v194](v78[v194 + 1 ]);end elseif (v81<=72) then local v196=v80[2];local v197,v198=v71(v78[v196](v13(v78,v196 + 1 ,v80[3])));v73=(v198 + v196) -1 ;local v199=0;for v215=v196,v73 do v199=v199 + 1 ;v78[v215]=v197[v199];end elseif (v81>73) then v78[v80[2]]=v78[v80[3]]/v80[4] ;else v78[v80[2]][v80[3]]=v78[v80[4]];end v72=v72 + 1 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
